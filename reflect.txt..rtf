{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww14280\viewh15400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 During this workshop i have learned a lot of new variables and concepts. \
\
	To start off, I would like to talk about what I found difficult and interesting. Throughout this workshop I got to practice using integer division and modulus. The in lab portion of the workshop was a great way to start, however, this was my first time working with modulus and it was a little difficult to understand. The second half of the workshop was very difficult to put together. The difficult part was using modulus in the program because part one of the workshop had obviously gave me an idea of how to set it up but incorporating modulus was the hard part. Integer division is a function I worked with in high school, so the process of using it was not very new for me. I was able to understand how to put it together faster compared to the modulus function. After understanding both of these concepts I was very interested in putting it together. I really found it interesting to learn a new concept and when I got to use it and it worked, it had me so excited. Compiling the program and seeing that I was able to put modulus into the program and make it simpler was very interesting. Modulus made it really easy to get a remainder from the user input and show the change left to give back. \
	Floating-points such as float or double can be helpful is many situations, however, when working with arithmetic operations it is better to work with integers. Float and double are helpful, but integers will not give you an exact perfect result. For example, a double will give you a a perfect result when it comes to fractions. Integer arithmetic is very helpful because it will take the decimal value and shorten it. For example, 2 / 3 = 0.6666667 but integer arithmetic will take that value and you can shorten it by 3 places. For this program we used integer to get only 2 decimal places because when you go shopping there is only 2 decimal places for the amount of cents. Therefore, it is much better to practice converting and using integer arithmetic operations rather than floating point values. \
	To finish off, you may ask why is it better to use modulus instead of subtraction or division to find the remainder? Although integer division is amazing it only gives you a the whole number. To put it in perspective, when working with money you can\'92t give 2/3 of a dollar. The modulus however, give the reminder of the rest of the modulus you the remainder. Let\'92s say the users input is $12.25 cents, if working with only division the result would have been 12 dollars owing, since working with modulus the result was 12 dollars owing and 1 quarter. That is why it Is better to work with modulus rather than division. Basically to summarize, integer division is take 12/4 and giving only the whole number of the result and modulus take the fractional part of the result and displays it which is 2.4. Which was very helpful in this program since we needed to give change too and not just whole dollars. }